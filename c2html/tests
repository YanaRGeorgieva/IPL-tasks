[[tinclude,#include],[theader,stdio.h],[tinclude,#include],[theader,stdlib.h],[tinclude,#include],[theader,time.h],[tint,int],[tidentifier,N],[tassign,=],[tnumber,0],[tsemicolon,;],[tint,int],[tidentifier,a],[tleftSqParen,[],[tnumber,750001],[trightSqParen,]],[tassign,=],[tleftBrace,{],[tnumber,0],[trightBrace,}],[tsemicolon,;],[tcomment1,/*Problem Secrect DAA*/],[tcomment2,//// mauuu],[tvoid,void],[tfunction,swap],[tleftParen,(],[tint,int],[tmultiply,*],[tidentifier,i],[tcomma,,],[tint,int],[tmultiply,*],[tidentifier,j],[trightParen,)],[tleftBrace,{],[tint,int],[tidentifier,t],[tassign,=],[tmultiply,*],[tidentifier,i],[tsemicolon,;],[tmultiply,*],[tidentifier,i],[tassign,=],[tmultiply,*],[tidentifier,j],[tsemicolon,;],[tmultiply,*],[tidentifier,j],[tassign,=],[tidentifier,t],[tsemicolon,;],[trightBrace,}],[tint,int],[tfunction,partition],[tleftParen,(],[tint,int],[tidentifier,l],[tcomma,,],[tint,int],[tidentifier,r],[trightParen,)],[tleftBrace,{],[tint,int],[tidentifier,randIdx],[tassign,=],[tidentifier,l],[tadd,+],[tfunction,rand],[tleftParen,(],[trightParen,)],[tmod,%],[tleftParen,(],[tidentifier,r],[tsubtract,-],[tidentifier,l],[trightParen,)],[tsemicolon,;],[tint,int],[tidentifier,pivot],[tassign,=],[tidentifier,a],[tleftSqParen,[],[tidentifier,randIdx],[trightSqParen,]],[tsemicolon,;],[tfunction,swap],[tleftParen,(],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,l],[trightSqParen,]],[tcomma,,],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,randIdx],[trightSqParen,]],[trightParen,)],[tsemicolon,;],[tint,int],[tidentifier,ind],[tassign,=],[tidentifier,l],[tsemicolon,;],[tfor,for],[tleftParen,(],[tint,int],[tidentifier,i],[tassign,=],[tidentifier,l],[tadd,+],[tnumber,1],[tsemicolon,;],[tidentifier,i],[tless,<],[tidentifier,r],[tsemicolon,;],[tadd,+],[tadd,+],[tidentifier,i],[trightParen,)],[tleftBrace,{],[tif,if],[tleftParen,(],[tidentifier,a],[tleftSqParen,[],[tidentifier,i],[trightSqParen,]],[tless,<],[tassign,=],[tidentifier,pivot],[trightParen,)],[tleftBrace,{],[tidentifier,ind],[tadd,+],[tadd,+],[tsemicolon,;],[tfunction,swap],[tleftParen,(],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,i],[trightSqParen,]],[tcomma,,],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,ind],[trightSqParen,]],[trightParen,)],[tsemicolon,;],[trightBrace,}],[trightBrace,}],[tfunction,swap],[tleftParen,(],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,l],[trightSqParen,]],[tcomma,,],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,ind],[trightSqParen,]],[trightParen,)],[tsemicolon,;],[treturn,return],[tidentifier,ind],[tsemicolon,;],[trightBrace,}],[tvoid,void],[tfunction,quickSort],[tleftParen,(],[tint,int],[tidentifier,l],[tcomma,,],[tint,int],[tidentifier,r],[trightParen,)],[tleftBrace,{],[tif,if],[tleftParen,(],[tidentifier,l],[tless,<],[tidentifier,r],[trightParen,)],[tleftBrace,{],[tint,int],[tidentifier,idx],[tassign,=],[tfunction,partition],[tleftParen,(],[tidentifier,l],[tcomma,,],[tidentifier,r],[trightParen,)],[tsemicolon,;],[tfunction,quickSort],[tleftParen,(],[tidentifier,l],[tcomma,,],[tidentifier,idx],[trightParen,)],[tsemicolon,;],[tfunction,quickSort],[tleftParen,(],[tidentifier,idx],[tadd,+],[tnumber,1],[tcomma,,],[tidentifier,r],[trightParen,)],[tsemicolon,;],[trightBrace,}],[trightBrace,}],[tint,int],[tfunction,binarySearch],[tleftParen,(],[tint,int],[tidentifier,k],[trightParen,)],[tleftBrace,{],[tint,int],[tidentifier,middle],[tcomma,,],[tidentifier,left],[tassign,=],[tnumber,0],[tcomma,,],[tidentifier,right],[tassign,=],[tidentifier,N],[tsubtract,-],[tnumber,1],[tsemicolon,;],[tif,if],[tleftParen,(],[tidentifier,k],[tless,<],[tidentifier,a],[tleftSqParen,[],[tidentifier,left],[trightSqParen,]],[trightParen,)],[treturn,return],[tleftParen,(],[tsubtract,-],[tnumber,1],[trightParen,)],[tsemicolon,;],[tif,if],[tleftParen,(],[tidentifier,k],[tequal,==],[tidentifier,a],[tleftSqParen,[],[tidentifier,left],[trightSqParen,]],[trightParen,)],[treturn,return],[tleftParen,(],[tidentifier,left],[tadd,+],[tnumber,1],[trightParen,)],[tsemicolon,;],[tif,if],[tleftParen,(],[tidentifier,k],[tgreater,>],[tidentifier,a],[tleftSqParen,[],[tidentifier,right],[trightSqParen,]],[trightParen,)],[treturn,return],[tleftParen,(],[tsubtract,-],[tnumber,1],[trightParen,)],[tsemicolon,;],[twhile,while],[tleftParen,(],[tidentifier,right],[tsubtract,-],[tidentifier,left],[tgreater,>],[tnumber,1],[trightParen,)],[tleftBrace,{],[tidentifier,middle],[tassign,=],[tleftParen,(],[tidentifier,left],[tadd,+],[tidentifier,right],[trightParen,)],[tdivide,/],[tnumber,2],[tsemicolon,;],[tif,if],[tleftParen,(],[tidentifier,k],[tless,<],[tassign,=],[tidentifier,a],[tleftSqParen,[],[tidentifier,middle],[trightSqParen,]],[trightParen,)],[tidentifier,right],[tassign,=],[tidentifier,middle],[tsemicolon,;],[telse,else],[tidentifier,left],[tassign,=],[tidentifier,middle],[tsemicolon,;],[trightBrace,}],[treturn,return],[tleftParen,(],[tleftParen,(],[tidentifier,right],[tless,<],[tassign,=],[tidentifier,N],[tsubtract,-],[tnumber,1],[tlogicalAnd,&&],[tidentifier,a],[tleftSqParen,[],[tidentifier,right],[trightSqParen,]],[tequal,==],[tidentifier,k],[trightParen,)],[tquestion,?],[tleftParen,(],[tidentifier,right],[tadd,+],[tnumber,1],[trightParen,)],[ttwodots,:],[tleftParen,(],[tsubtract,-],[tnumber,1],[trightParen,)],[trightParen,)],[tsemicolon,;],[trightBrace,}],[tint,int],[tfunction,main],[tleftParen,(],[trightParen,)],[tleftBrace,{],[tfunction,srand],[tleftParen,(],[tfunction,time],[tleftParen,(],[tnumber,0],[trightParen,)],[trightParen,)],[tsemicolon,;],[tfunction,scanf],[tleftParen,(],[tdoubleQuot,"],[ttypesPrintF,%d],[tdoubleQuot,"],[tcomma,,],[tbitwiseAnd,&],[tidentifier,N],[trightParen,)],[tsemicolon,;],[tfor,for],[tleftParen,(],[tint,int],[tidentifier,i],[tassign,=],[tnumber,0],[tsemicolon,;],[tidentifier,i],[tless,<],[tidentifier,N],[tsemicolon,;],[tadd,+],[tadd,+],[tidentifier,i],[trightParen,)],[tleftBrace,{],[tfunction,scanf],[tleftParen,(],[tdoubleQuot,"],[ttypesPrintF,%d],[tdoubleQuot,"],[tcomma,,],[tbitwiseAnd,&],[tidentifier,a],[tleftSqParen,[],[tidentifier,i],[trightSqParen,]],[trightParen,)],[tsemicolon,;],[trightBrace,}],[tfunction,quickSort],[tleftParen,(],[tnumber,0],[tcomma,,],[tidentifier,N],[trightParen,)],[tsemicolon,;],[tint,int],[tidentifier,tmp],[tassign,=],[tnumber,0],[tsemicolon,;],[tfunction,scanf],[tleftParen,(],[tdoubleQuot,"],[ttypesPrintF,%d],[tdoubleQuot,"],[tcomma,,],[tbitwiseAnd,&],[tidentifier,tmp],[trightParen,)],[tsemicolon,;],[twhile,while],[tleftParen,(],[tidentifier,tmp],[tnotequal,!=],[tnumber,0],[trightParen,)],[tleftBrace,{],[tfunction,printf],[tleftParen,(],[tdoubleQuot,"],[ttypesPrintF,%d],[tnl,\n],[tdoubleQuot,"],[tcomma,,],[tfunction,binarySearch],[tleftParen,(],[tidentifier,tmp],[trightParen,)],[trightParen,)],[tsemicolon,;],[tfunction,scanf],[tleftParen,(],[tdoubleQuot,"],[ttypesPrintF,%d],[tdoubleQuot,"],[tcomma,,],[tbitwiseAnd,&],[tidentifier,tmp],[trightParen,)],[tsemicolon,;],[trightBrace,}],[treturn,return],[tnumber,0],[tsemicolon,;],[trightBrace,}]]
